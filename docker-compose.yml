version: '3.8'

services:
  web:
    build: ./app
    container_name: fastapi_app
    command: >
      bash -c "
      if [ \"$APP_ENV\" = 'production' ]; then 
        uvicorn main:app --host 0.0.0.0 --port 8000;
      else 
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload;  
      fi"
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OLLAMA_API_URL=http://ollama:8000/generate
      - APP_ENV=development  # Default to development mode
    depends_on:
      - redis
      - ollama
    volumes:
      - ./app:/app  # Mount the app directory to enable auto-reloading

  celery_worker:
    build: ./app
    container_name: celery_worker
    command: celery -A main.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    volumes:
      - ./app:/app

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"


  ollama:
    image: ollama/ollama:latest  # Use the official Ollama image
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    ports:
      - "8001:8001"  # Expose Ollama's API port, changing internal to external port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]  # Assumes health endpoint exists
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    build: ./client
    container_name: client
    environment:
      - OCR_URL=http://fastapi_app:8000/ocr
      - RESULT_URL=http://fastapi_app:8000/ocr/result
    volumes:
      - ./client:/client
      - ./examples:/examples
    command: ["python", "/client/cli.py", "--file", "/examples/example-mri.pdf"]
    depends_on:
      - web